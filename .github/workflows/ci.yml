---
name: "CI"
on: # yamllint disable-line rule:truthy rule:comments
  - "push"
  - "pull_request"

env:
  PLUGIN_NAME: "nautobot-plugin-ssot-servicenow"

jobs:
  black:
    runs-on: "ubuntu-20.04"
    env:
      INVOKE_NAUTOBOT_SSOT_SERVICENOW_LOCAL: "True"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v2"
      - name: "Setup environment"
        uses: "networktocode/gh-action-setup-poetry-environment@v2"
      - name: "Linting: black"
        run: "poetry run invoke black"
  bandit:
    runs-on: "ubuntu-20.04"
    env:
      INVOKE_NAUTOBOT_SSOT_SERVICENOW_LOCAL: "True"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v2"
      - name: "Setup environment"
        uses: "networktocode/gh-action-setup-poetry-environment@v2"
      - name: "Linting: bandit"
        run: "poetry run invoke bandit"
  pydocstyle:
    runs-on: "ubuntu-20.04"
    env:
      INVOKE_NAUTOBOT_SSOT_SERVICENOW_LOCAL: "True"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v2"
      - name: "Setup environment"
        uses: "networktocode/gh-action-setup-poetry-environment@v2"
      - name: "Linting: pydocstyle"
        run: "poetry run invoke pydocstyle"
  flake8:
    runs-on: "ubuntu-20.04"
    env:
      INVOKE_NAUTOBOT_SSOT_SERVICENOW_LOCAL: "True"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v2"
      - name: "Setup environment"
        uses: "networktocode/gh-action-setup-poetry-environment@v2"
      - name: "Linting: flake8"
        run: "poetry run invoke flake8"
  yamllint:
    runs-on: "ubuntu-20.04"
    env:
      INVOKE_NAUTOBOT_SSOT_SERVICENOW_LOCAL: "True"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v2"
      - name: "Setup environment"
        uses: "networktocode/gh-action-setup-poetry-environment@v2"
      - name: "Linting: yamllint"
        run: "poetry run invoke yamllint"
  pylint:
    needs:
      - "bandit"
      - "pydocstyle"
      - "flake8"
      - "yamllint"
      - "black"
    runs-on: "ubuntu-20.04"
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.6"]
        nautobot-version: ["1.2.1"]
    env:
      INVOKE_NAUTOBOT_SSOT_SERVICENOW_PYTHON_VER: "${{ matrix.python-version }}"
      INVOKE_NAUTOBOT_SSOT_SERVICENOW_NAUTOBOT_VER: "${{ matrix.nautobot-version }}"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v2"
      - name: "Setup environment"
        uses: "networktocode/gh-action-setup-poetry-environment@v2"
      - name: "Set up Docker Buildx"
        id: "buildx"
        uses: "docker/setup-buildx-action@v1"
      - name: "Build"
        uses: "docker/build-push-action@v2"
        with:
          builder: "${{ steps.buildx.outputs.name }}"
          context: "./"
          push: false
          load: true
          tags: "${{ env.PLUGIN_NAME }}/nautobot:${{ matrix.nautobot-version }}-py${{ matrix.python-version }}"
          file: "./development/Dockerfile"
          cache-from: "type=gha,scope=${{ matrix.nautobot-version }}-py${{ matrix.python-version }}"
          cache-to: "type=gha,scope=${{ matrix.nautobot-version }}-py${{ matrix.python-version }}"
          build-args: |
            NAUTOBOT_VER=${{ matrix.nautobot-version }}
            PYTHON_VER=${{ matrix.python-version }}
      - name: "Copy credentials"
        run: "cp development/creds.example.env development/creds.env"
      - name: "Linting: pylint"
        run: "poetry run invoke pylint"
  unittest:
    needs:
      - "pylint"
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9"]
        nautobot-version: ["1.2.1"]
    runs-on: "ubuntu-20.04"
    env:
      INVOKE_NAUTOBOT_SSOT_SERVICENOW_PYTHON_VER: "${{ matrix.python-version }}"
      INVOKE_NAUTOBOT_SSOT_SERVICENOW_NAUTOBOT_VER: "${{ matrix.nautobot-version }}"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v2"
      - name: "Setup environment"
        uses: "networktocode/gh-action-setup-poetry-environment@v2"
      - name: "Set up Docker Buildx"
        id: "buildx"
        uses: "docker/setup-buildx-action@v1"
      - name: "Build"
        uses: "docker/build-push-action@v2"
        with:
          builder: "${{ steps.buildx.outputs.name }}"
          context: "./"
          push: false
          load: true
          tags: "${{ env.PLUGIN_NAME }}/nautobot:${{ matrix.nautobot-version }}-py${{ matrix.python-version }}"
          file: "./development/Dockerfile"
          cache-from: "type=gha,scope=${{ matrix.nautobot-version }}-py${{ matrix.python-version }}"
          cache-to: "type=gha,scope=${{ matrix.nautobot-version }}-py${{ matrix.python-version }}"
          build-args: |
            NAUTOBOT_VER=${{ matrix.nautobot-version }}
            PYTHON_VER=${{ matrix.python-version }}
      - name: "Copy credentials"
        run: "cp development/creds.example.env development/creds.env"
      - name: "Run Tests"
        run: "poetry run invoke unittest"
