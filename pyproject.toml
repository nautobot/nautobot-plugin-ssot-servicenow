[tool.poetry]
name = "nautobot-ssot-servicenow"
version = "0.9.2"
description = "Nautobot SSoT ServiceNow"
authors = ["Network to Code, LLC <opensource@networktocode.com>"]

license = "Apache-2.0"

readme = "README.md"
homepage = "https://github.com/nautobot/nautobot-plugin-ssot-servicenow"
repository = "https://github.com/nautobot/nautobot-plugin-ssot-servicenow"
keywords = ["nautobot", "nautobot-plugin"]
include = [
    "LICENSE",
    "README.md",
]
packages = [
    { include = "nautobot_ssot_servicenow" },
]

[tool.poetry.dependencies]
python = "^3.7"
nautobot-ssot = "^1.0.1"
Jinja2 = ">=2.11.3"
PyYAML = ">=5.4"
diffsync = "^1.3.0"
# pysnow = "^0.7.17"
# PySNow is currently pinned to an older version of pytz as a dependency, which blocks compatibility with newer
# versions of Nautobot. See https://github.com/rbw/pysnow/pull/186
# For now, we have embedded a copy of PySNow under nautobot_ssot_servicenow/third_party/pysnow;
# here are its direct packaging dependencies:
requests = "^2.21.0"
oauthlib = "^3.1.0"
python-magic = "^0.4.15"
requests-oauthlib = "^1.3.0"
six = "^1.13.0"
ijson = "^2.5.1"
pytz = ">=2019.3"
nautobot = "^1.4.0"


[tool.poetry.dev-dependencies]
invoke = "*"
black = {version = "*", python = "^3.6.2"}
django-debug-toolbar = "*"
yamllint = "*"
bandit = "*"
pylint = "*"
pylint-django = "*"
pydocstyle = "*"
flake8 = "*"
coverage = "*"
mkdocs = "*"

[tool.black]
line-length = 120
target-version = ['py37']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | nautobot_ssot_servicenow/third_party
  )/
  | settings.py     # This is where you define files that should not be stylized by black
                     # the root of the project
)
'''

[tool.pylint.master]
# Include the pylint_django plugin to avoid spurious warnings about Django patterns
load-plugins="pylint_django"

[tool.pylint.basic]
# No docstrings required for private methods (Pylint default), or for test_ functions, or for inner Meta classes.
no-docstring-rgx="^(_|test_|Meta$)"

[tool.pylint.messages_control]
# Line length is enforced by Black, so pylint doesn't need to check it.
# Pylint and Black disagree about how to format multi-line arrays; Black wins.
disable = """,
    line-too-long,
    bad-continuation,
    too-few-public-methods,
    duplicate-code,
    """

[tool.pylint.miscellaneous]
# Don't flag TODO as a failure, let us commit with things that still need to be done in the code
notes = """,
    FIXME,
    XXX,
    """

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = [
    "tests"
]
addopts = "-vv --doctest-modules"
